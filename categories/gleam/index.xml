<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Gleam on Juha.TL</title>
    <link>https://juha.tl/categories/gleam/</link>
    <description>Recent content in Gleam on Juha.TL</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 04 Jun 2021 13:00:00 +0200</lastBuildDate><atom:link href="https://juha.tl/categories/gleam/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Static types on BEAM: Gleam</title>
      <link>https://juha.tl/post/static-types-on-beam-gleam/</link>
      <pubDate>Fri, 04 Jun 2021 13:00:00 +0200</pubDate>
      
      <guid>https://juha.tl/post/static-types-on-beam-gleam/</guid>
      <description>While Elixir is a strongly typed language, the most common complaint I&amp;rsquo;ve encountered regarding Elixir is the lack of static typing. The Elixir core team has investigated the feasibility of introducing a backwards-compatible way of introducing a static type system in the past, but ultimately concluded that Elixir won&amp;rsquo;t be getting one (at least not via official means).
Thankfully, Elixir provides many tools for addressing typical type-related issues. The strong typing means implicit type casting is out of the picture, and you can avoid many other pitfalls of dynamic typing with a thorough use of guards, type specs and pattern matching.</description>
    </item>
    
  </channel>
</rss>
